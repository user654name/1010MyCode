package com.md5.a_md5;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class Md5Demo {


    public static void main(String[] args) {


        String md5 = getMD5(getMD5("666888"));

        System.out.println("md5=" + md5);

        String multiMD5 = multiMD5("666888", 128);
        System.out.println("multiMD5 = " + multiMD5);


    }


    /**
     * 多次MD5加密
     * @param pwd 密码
     * @param times 次数
     * @return 加密后MD5值
     */
    public static String multiMD5(String pwd, Integer times) {


        for (int i = 0; i < times; i++) {
            pwd = getMD5(pwd);
        }
        return pwd;
    }

    public static String getMD5(String pwd) {
        String md5hashvalue = "";

        try {
            //一个长度可扩展的String
            StringBuffer stringBuffer = new StringBuffer();

            //1、传一个参数：algorithm 算法
            MessageDigest md5 = MessageDigest.getInstance("MD5");

            //2、****MD5值生成算法，传入密码，返回一个MD5字节数组(16位)****
            //这个字节数组长度为16
            byte[] digest = md5.digest(pwd.getBytes());//要先将输入的密码字符串变成字节数组

            //3、对结果进行处理： 将MD5值（16个字节的字节数组）还原成字符串
            for (byte b : digest) {
                //从MD5字节数组中一个字节一个字节拿出来，放入StringBuffer中

                //3.1 将byte变为int （一个字节对应一个两位的16进制数）
                //00001110 0E
                int i = b & 0x000000FF;
                //3.2 int转为16进制的字符串（将一个两位数的16进制数 转为 一个字节）
                String s = Integer.toHexString(i);//要求传一个int值
                //3.3 将每个字节对应的字符串一次放入StringBuffer 中
                if (s.length() == 1) {
                    stringBuffer.append(0);
                }
                stringBuffer.append(s);
            }
            md5hashvalue = stringBuffer.toString();

        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }

        //返回一个MD5 hash值
        return md5hashvalue;
    }


}
package com.md5.a_md5;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class Md5Demo {


    public static void main(String[] args) {


        String md5 = getMD5(getMD5("666888"));

        System.out.println("md5=" + md5);

        String multiMD5 = multiMD5("666888", 128);
        System.out.println("multiMD5 = " + multiMD5);


    }


    /**
     * 多次MD5加密
     * @param pwd 密码
     * @param times 次数
     * @return 加密后MD5值
     */
    public static String multiMD5(String pwd, Integer times) {


        for (int i = 0; i < times; i++) {
            pwd = getMD5(pwd);
        }
        return pwd;
    }

    public static String getMD5(String pwd) {
        String md5hashvalue = "";

        try {
            //一个长度可扩展的String
            StringBuffer stringBuffer = new StringBuffer();

            //1、传一个参数：algorithm 算法
            MessageDigest md5 = MessageDigest.getInstance("MD5");

            //2、****MD5值生成算法，传入密码，返回一个MD5字节数组(16位)****
            //这个字节数组长度为16
            byte[] digest = md5.digest(pwd.getBytes());//要先将输入的密码字符串变成字节数组

            //3、对结果进行处理： 将MD5值（16个字节的字节数组）还原成字符串
            for (byte b : digest) {
                //从MD5字节数组中一个字节一个字节拿出来，放入StringBuffer中

                //3.1 将byte变为int （一个字节对应一个两位的16进制数）
                //00001110 0E
                int i = b & 0x000000FF;
                //3.2 int转为16进制的字符串（将一个两位数的16进制数 转为 一个字节）
                String s = Integer.toHexString(i);//要求传一个int值
                //3.3 将每个字节对应的字符串一次放入StringBuffer 中
                if (s.length() == 1) {
                    stringBuffer.append(0);
                }
                stringBuffer.append(s);
            }
            md5hashvalue = stringBuffer.toString();

        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }

        //返回一个MD5 hash值
        return md5hashvalue;
    }


}
package com.md5.a_md5;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class Md5Demo {


    public static void main(String[] args) {


        String md5 = getMD5(getMD5("666888"));

        System.out.println("md5=" + md5);

        String multiMD5 = multiMD5("666888", 128);
        System.out.println("multiMD5 = " + multiMD5);


    }


    /**
     * 多次MD5加密
     * @param pwd 密码
     * @param times 次数
     * @return 加密后MD5值
     */
    public static String multiMD5(String pwd, Integer times) {


        for (int i = 0; i < times; i++) {
            pwd = getMD5(pwd);
        }
        return pwd;
    }

    public static String getMD5(String pwd) {
        String md5hashvalue = "";

        try {
            //一个长度可扩展的String
            StringBuffer stringBuffer = new StringBuffer();

            //1、传一个参数：algorithm 算法
            MessageDigest md5 = MessageDigest.getInstance("MD5");

            //2、****MD5值生成算法，传入密码，返回一个MD5字节数组(16位)****
            //这个字节数组长度为16
            byte[] digest = md5.digest(pwd.getBytes());//要先将输入的密码字符串变成字节数组

            //3、对结果进行处理： 将MD5值（16个字节的字节数组）还原成字符串
            for (byte b : digest) {
                //从MD5字节数组中一个字节一个字节拿出来，放入StringBuffer中

                //3.1 将byte变为int （一个字节对应一个两位的16进制数）
                //00001110 0E
                int i = b & 0x000000FF;
                //3.2 int转为16进制的字符串（将一个两位数的16进制数 转为 一个字节）
                String s = Integer.toHexString(i);//要求传一个int值
                //3.3 将每个字节对应的字符串一次放入StringBuffer 中
                if (s.length() == 1) {
                    stringBuffer.append(0);
                }
                stringBuffer.append(s);
            }
            md5hashvalue = stringBuffer.toString();

        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }

        //返回一个MD5 hash值
        return md5hashvalue;
    }


}
package com.md5.a_md5;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class Md5Demo {


    public static void main(String[] args) {


        String md5 = getMD5(getMD5("666888"));

        System.out.println("md5=" + md5);

        String multiMD5 = multiMD5("666888", 128);
        System.out.println("multiMD5 = " + multiMD5);


    }


    /**
     * 多次MD5加密
     * @param pwd 密码
     * @param times 次数
     * @return 加密后MD5值
     */
    public static String multiMD5(String pwd, Integer times) {
// 2019年1月25日 15:39:20
最不好的是，我对自己的项目没有动力


        for (int i = 0; i < times; i++) {
            pwd = getMD5(pwd);
        }
        return pwd;
    }

    public static String getMD5(String pwd) {
        String md5hashvalue = "";

        try {
            //一个长度可扩展的String
            StringBuffer stringBuffer = new StringBuffer();

            //1、传一个参数：algorithm 算法
            MessageDigest md5 = MessageDigest.getInstance("MD5");

            //2、****MD5值生成算法，传入密码，返回一个MD5字节数组(16位)****
            //这个字节数组长度为16
            byte[] digest = md5.digest(pwd.getBytes());//要先将输入的密码字符串变成字节数组

            //3、对结果进行处理： 将MD5值（16个字节的字节数组）还原成字符串
            for (byte b : digest) {
                //从MD5字节数组中一个字节一个字节拿出来，放入StringBuffer中

                //3.1 将byte变为int （一个字节对应一个两位的16进制数）
                //00001110 0E
                int i = b & 0x000000FF;
                //3.2 int转为16进制的字符串（将一个两位数的16进制数 转为 一个字节）
                String s = Integer.toHexString(i);//要求传一个int值
                //3.3 将每个字节对应的字符串一次放入StringBuffer 中
                if (s.length() == 1) {
                    stringBuffer.append(0);
                }
                stringBuffer.append(s);
            }
            md5hashvalue = stringBuffer.toString();

        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }
2019年1月28日 11:06:37 周一
昨天躲交警挺成功的，今天早上送猪上班还是被抓了，30块。6点早起看了docker视频，自己操作了几下，才有底气上班。上午大猪猪
买到了31号的飞机票，我就退了软卧，退票手续费32，抢票费40，亏了72，今天是个亏钱的日子啊。还好交罚款很快，上班没迟到，
要么就亏大了。在公司，上午，很懵逼，去领导那里交流进度，但是他说一半溜了，我也不知道今天上班该做啥了。手头任务CAS单点登录，
和Docker都很蛋疼，CAS我卡了一周了，毫无进展，Docker就是我没做好的任务，还得从头搞吧，hhh，反正要过年了，赶紧过去这几天吧。

2019年1月25日 周五
晚上大猪猪加班，等她下班我们吃了杨国福，这回我第一次去杨国福自己选菜，我们一人一碗，吃得不错，感冒看起来要好了。
看球，吉林赢了同曦，开心。
2019年1月26日 周六
大猪猪和赵丹丽去逛街，我自己在家呆着，想玩模拟人生，又想玩太吾绘卷，同时我有不那么想玩电脑游戏。躺床上发呆，玩皇室战争，
遇到了瓶颈，无论如何都不能达到4900奖杯的联赛。唉，难受。下午在家很闷，就骑车出去，取了一箱子奇多快递，然后骑车到处逛。
晚上看了老电影《非诚勿扰》拍的确实不错，现在重新看比小时候能看懂一些了....

        //返回一个MD5 hash值
        return md5hashvalue;
    }
                //3.1 将byte变为int （一个字节对应一个两位的16进制数）
                //00001110 0E
                int i = b & 0x000000FF;
                //3.2 int转为16进制的字符串（将一个两位数的16进制数 转为 一个字节）
                String s = Integer.toHexString(i);//要求传一个int值
                //3.3 将每个字节对应的字符串一次放入StringBuffer 中
                if (s.length() == 1) {
                    stringBuffer.append(0);
                }
                stringBuffer.append(s);
            }
            md5hashvalue = stringBuffer.toString();

        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }

        //返回一个MD5 hash值
        return md5hashvalue;
    }
                //3.1 将byte变为int （一个字节对应一个两位的16进制数）
                //00001110 0E
                int i = b & 0x000000FF;
                //3.2 int转为16进制的字符串（将一个两位数的16进制数 转为 一个字节）
                String s = Integer.toHexString(i);//要求传一个int值
                //3.3 将每个字节对应的字符串一次放入StringBuffer 中
                if (s.length() == 1) {
                    stringBuffer.append(0);
                }
                stringBuffer.append(s);
            }
            md5hashvalue = stringBuffer.toString();

        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }

        //返回一个MD5 hash值
        return md5hashvalue;
    }


}
package com.md5.a_md5;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class Md5Demo {


    public static void main(String[] args) {


        String md5 = getMD5(getMD5("666888"));

        System.out.println("md5=" + md5);

        String multiMD5 = multiMD5("666888", 128);
        System.out.println("multiMD5 = " + multiMD5);


    }


    /**
     * 多次MD5加密
     * @param pwd 密码
     * @param times 次数
     * @return 加密后MD5值
     */
    public static String multiMD5(String pwd, Integer times) {


        for (int i = 0; i < times; i++) {
            pwd = getMD5(pwd);
        }
        return pwd;
    }

    public static String getMD5(String pwd) {
        String md5hashvalue = "";

        try {
            //一个长度可扩展的String
            StringBuffer stringBuffer = new StringBuffer();

            //1、传一个参数：algorithm 算法
            MessageDigest md5 = MessageDigest.getInstance("MD5");

            //2、****MD5值生成算法，传入密码，返回一个MD5字节数组(16位)****
            //这个字节数组长度为16
            byte[] digest = md5.digest(pwd.getBytes());//要先将输入的密码字符串变成字节数组

            //3、对结果进行处理： 将MD5值（16个字节的字节数组）还原成字符串
            for (byte b : digest) {
                //从MD5字节数组中一个字节一个字节拿出来，放入StringBuffer中

                //3.1 将byte变为int （一个字节对应一个两位的16进制数）
                //00001110 0E
                int i = b & 0x000000FF;
                //3.2 int转为16进制的字符串（将一个两位数的16进制数 转为 一个字节）
                String s = Integer.toHexString(i);//要求传一个int值
                //3.3 将每个字节对应的字符串一次放入StringBuffer 中
                if (s.length() == 1) {
                    stringBuffer.append(0);
                }
                stringBuffer.append(s);
            }
            md5hashvalue = stringBuffer.toString();

        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }

        //返回一个MD5 hash值
        return md5hashvalue;
    }


}
package com.md5.a_md5;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class Md5Demo {


    public static void main(String[] args) {


        String md5 = getMD5(getMD5("666888"));

        System.out.println("md5=" + md5);

        String multiMD5 = multiMD5("666888", 128);
        System.out.println("multiMD5 = " + multiMD5);


    }


    /**
     * 多次MD5加密
     * @param pwd 密码
     * @param times 次数
     * @return 加密后MD5值
     */
    public static String multiMD5(String pwd, Integer times) {


        for (int i = 0; i < times; i++) {
            pwd = getMD5(pwd);
        }
        return pwd;
    }

    public static String getMD5(String pwd) {
        String md5hashvalue = "";

        try {
            //一个长度可扩展的String
            StringBuffer stringBuffer = new StringBuffer();

            //1、传一个参数：algorithm 算法
            MessageDigest md5 = MessageDigest.getInstance("MD5");

            //2、****MD5值生成算法，传入密码，返回一个MD5字节数组(16位)****
            //这个字节数组长度为16
            byte[] digest = md5.digest(pwd.getBytes());//要先将输入的密码字符串变成字节数组

            //3、对结果进行处理： 将MD5值（16个字节的字节数组）还原成字符串
            for (byte b : digest) {
                //从MD5字节数组中一个字节一个字节拿出来，放入StringBuffer中

                //3.1 将byte变为int （一个字节对应一个两位的16进制数）
                //00001110 0E
                int i = b & 0x000000FF;
                //3.2 int转为16进制的字符串（将一个两位数的16进制数 转为 一个字节）
                String s = Integer.toHexString(i);//要求传一个int值
                //3.3 将每个字节对应的字符串一次放入StringBuffer 中
                if (s.length() == 1) {
                    stringBuffer.append(0);
                }
                stringBuffer.append(s);
            }
            md5hashvalue = stringBuffer.toString();

        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }

        //返回一个MD5 hash值
        return md5hashvalue;
    }


}
